List/Count of prime numbers

#include <stdio.h>
#include <stdbool.h>
bool isPrime(int n)
{
    if (n <= 1) 
	{
        return false;
    }
    for (int i = 2; i <= n / 2; i++) 
	{
        if (n % i == 0) 
		
		{
            return false;
        }
    }
    return true;
}
int main() 
{
    int start = 11, end = 25;
    int count = 0;
    for (int n = start; n <= end; n++) 
	{
        if (isPrime(n)) 
		{
            printf("%d is a prime number.\n", n);
            count++;
        } else 
		{
            printf("%d is not a prime number.\n", n);
        }
    }
    printf("There are %d prime numbers between %d and %d.\n", count, start, end);
    return 0;
}
------------------------------------------------------------------------------------------------
Digital root of given number

#include <stdio.h>
int digitalRoot(int num) 
{
    int sum = 0;
    while (num != 0) 
	{
        sum += num % 10;
        num /= 10;
    }
    if (sum < 10) 
	{
        return sum;
    } else 
	{
        return digitalRoot(sum);
    }
}
int main()
{
    int num = 9874;
    int digital_root = digitalRoot(num);
    printf("The digital root of %d is %d.\n", num, digital_root);
    return 0;
}
------------------------------------------------------------------------------
Count leap years in given range

#include <stdio.h>
int isLeapYear(int year) 
{
    if (year % 4 == 0) 
	{
        if (year % 100 == 0) 
		{
            if (year % 400 == 0) 
			{
                return 1;
            } else 
			{
                return 0;
            }
        } 
		else 
		{
            return 1;
        }
    } 
	else 
	{
        return 0;
    }
}
int main() 
{
    int start = 1900;
    int end = 2500;
    int year = start;
    int count = 0;
    while (year <= end) 
	{
        if (isLeapYear(year)) 
		{
            count++;
        }
        year++;
    }
    printf("There are %d leap years between %d and %d.\n", count, start, end);
    return 0;
}
-------------------------------------------------------------------------------------------
Sum of triangular numbers

#include <stdio.h>
int main() {
    int end = 5; 
    int total = 0;
    int triangular = 0;
    for (int n = 1; n <= end; n++) 
	{
        triangular += n;
        total += triangular;
    }
    printf("The sum of triangular numbers up to %d is %d.\n", end, total);
    return 0;
}
---------------------------------------------------------------------------------------
Number pattern

#include <stdio.h>
int main() {
    int n = 5;
    // Print pattern 1
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", j);
        }
    }
    printf("\n");
    
    // Print pattern 2
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", j*2);
        }
    }
    printf("\n");
    
    // Print pattern 3
    int term = 1;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", term);
            term++;
        }
    }
    printf("\n");
    
    // Print pattern 4
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", i+j);
        }
    }
    printf("\n");
    
    // Print pattern 5
    for (int i = n; i >= 1; i--) {
        for (int j = 1; j <= i; j++) {
            printf("%d", j);
        }
        printf("\n");
    }

    // Print pattern 6
    for (int i = n; i >= 1; i--) {
        for (int j = i; j >= 1; j--) {
            printf("%d", j);
        }
        printf("\n");
    }

    // Print pattern 7
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", i*j);
        }
    }
    printf("\n");

    // Print pattern 8
    for (int i = n; i >= 1; i--) {
        for (int j = 1; j <= i; j++) {
            printf("%d", j);
        }
        printf("\n");
    }

    // Print pattern 9
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", i*j);
        }
        printf("\n");
    }
    return 0;
}
---------------------------------------------------------------------
Pascal triangle

#include <stdio.h>
// function to calculate nCr
int nCr(int n, int r) {
    int i, p = 1;
    for (i = 1; i <= r; i++) {
        p *= (n - i + 1);
        p /= i;
    }
    return p;
}

// function to print Pascal's triangle
void printPascalTriangle(int rows) {
    int i, j;
    for (i = 0; i < rows; i++) {
        for (j = 0; j <= i; j++) {
            printf("%d ", nCr(i, j));
        }
        printf("\n");
    }
}

// main function to test the code
int main() {
    int rows;
    printf("Enter the number of rows: ");
    scanf("%d", &rows);
    printf("Pascal's triangle:\n");
    printPascalTriangle(rows);
    return 0;
}
